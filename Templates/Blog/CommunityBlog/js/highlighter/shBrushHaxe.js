(function(){SyntaxHighlighter=SyntaxHighlighter||(typeof require!=="undefined"?require("shCore").SyntaxHighlighter:null);function a(){var d="class interface package macro enum typedef extends implements dynamic in for if while else do try switch case catch";var e="return break continue new throw cast using import function public private inline static untyped callback true false null Int Float String Void Std Bool Dynamic Array Vector";this.regexList=[{regex:SyntaxHighlighter.regexLib.singleLineCComments,css:"comments"},{regex:SyntaxHighlighter.regexLib.multiLineCComments,css:"comments"},{regex:SyntaxHighlighter.regexLib.doubleQuotedString,css:"string"},{regex:SyntaxHighlighter.regexLib.singleQuotedString,css:"string"},{regex:/\b([\d]+(\.[\d]+)?|0x[a-f0-9]+)\b/gi,css:"value"},{regex:new RegExp(this.getKeywords(d),"gm"),css:"color3"},{regex:new RegExp(this.getKeywords(e),"gm"),css:"keyword"},{regex:new RegExp("var","gm"),css:"variable"},{regex:new RegExp("trace","gm"),css:"color1"},{regex:new RegExp("#if","gm"),css:"comments"},{regex:new RegExp("#elseif","gm"),css:"comments"},{regex:new RegExp("#end","gm"),css:"comments"},{regex:new RegExp("#error","gm"),css:"comments"}];var b=["debug","error","cpp","js","neko","php","flash","flash8","flash9","flash10","flash10","mobile","desktop","web","ios","android","iphone"];var c;var f=b.length;for(c=0;c<=f-1;c++){this.regexList.push({regex:new RegExp(b[c],"gm"),css:"comments"});this.regexList.push({regex:new RegExp("!"+b[c],"gm"),css:"comments"})}this.forHtmlScript(SyntaxHighlighter.regexLib.scriptScriptTags)}a.prototype=new SyntaxHighlighter.Highlighter();a.aliases=["haxe","hx"];SyntaxHighlighter.brushes.Haxe=a;typeof(exports)!="undefined"?exports.Brush=a:null})();